import java.util.*;

class Solution {
    public int[] solution(int[] answers) {

				/*
				 * https://programmers.co.kr/learn/courses/30/lessons/42840
				 */

        int[] first = new int[answers.length];
        int[] second = new int[answers.length];
        int[] third = new int[answers.length];

        int correct1 = 0;
        int correct2 = 0;
        int correct3 = 0;

        for(int i = 0; i < answers.length; i++) {
            first[i] = i % 5 + 1;
            switch(i%8) {
                case 1 : second[i] = 1; break;
                case 3 : second[i] = 3; break;
                case 5 : second[i] = 4; break;
                case 7 : second[i] = 5; break;
                default : second[i] = 2; break;
            }
            switch(i%10) {
                case 0 : third[i] = 3; break;
                case 2 : third[i] = 1; break;
                case 4 : third[i] = 2; break;
                case 6 : third[i] = 4; break;
                case 8 : third[i] = 5; break;
                default : third[i] = third[i-1]; break;
            }
            if(answers[i] == first[i]) {
                correct1++;
            }
            if(answers[i] == second[i]) {
                correct2++;
            }
            if(answers[i] == third[i]) {
                correct3++;
            }
        }

        List<Integer> correct = new ArrayList<>();
        if(correct1 >= correct2 && correct1 >= correct3) {
            correct.add(1);
            if(correct1 == correct2) {
                correct.add(2);
            }
            if(correct1 == correct3) {
                correct.add(3);
            }
        } else if(correct2 >= correct1 && correct2 >= correct3) {
            correct.add(2);
            if(correct2 == correct3) {
                correct.add(3);
            }
        } else if(correct3 >= correct1 && correct3 >= correct2) {
            correct.add(3);
        }

        int[] answer = correct.stream()
                .mapToInt(Integer::intValue)
                .toArray();

        return answer;
    }
}
