```java
class Solution {
    public String solution(int[] numbers, String hand) {

			/*
			 *  https://programmers.co.kr/learn/courses/30/lessons/67256
			 */

        String answer = "";
        String left = "*";
        String right = "#";
        
        for(int i = 0; i < numbers.length; i++) {
            if(numbers[i] == 1 || numbers[i] == 4 || numbers[i] == 7) {
                answer += "L";
                left = String.valueOf(numbers[i]);
            } else if(numbers[i] == 3 || numbers[i] == 6 || numbers[i] == 9) {
                answer += "R";
                right = String.valueOf(numbers[i]);
            } else {
                String value = this.distance(left, right, numbers[i]);
                if(value.equals("E")) {
                    if(hand.equals("left")) {
                        answer += "L";
                        left = String.valueOf(numbers[i]);
                    } else {
                        answer += "R";
                        right = String.valueOf(numbers[i]);
                    }
                } else if(value.equals("L")) {
                    answer += value;
                    left = String.valueOf(numbers[i]);
                } else {
                    answer += value;
                    right = String.valueOf(numbers[i]);
                }
            }
        }
        
        return answer;
    }
    
    
    public String distance(String bleft, String bright, int num) {
        
        int left = 0;
        int right = 0;
        int[][] key = {{1,2,3},{4,5,6},{7,8,9},{10,0,12}};
        int numi = 0;
        int numj = 0;
        int lefti = 0;
        int leftj = 0;
        int righti = 0;
        int rightj = 0;
        
        if(bleft.equals("*")) {
            left = 10;
        } else {
            left = Integer.parseInt(bleft);
        }
        if(bright.equals("#")) {
            right = 12;
        } else {
            right = Integer.parseInt(bright);
        }
        
        for(int i = 0; i < key.length; i++) {
            for(int j = 0; j < key[i].length; j++) {
                if(key[i][j] == num) {
                    numi = i;
                    numj = j;
                }
                if(left == key[i][j]) {
                    lefti = i;
                    leftj = j;
                }
                if(right == key[i][j]) {
                    righti = i;
                    rightj = j;
                }
            }
        }
        
        int leftDistance = Math.abs(numi-lefti) + Math.abs(numj - leftj);
        int rightDistance = Math.abs(numi - righti) + Math.abs(numj - rightj);
        
        if(leftDistance < rightDistance) {
            return "L";
        } else if(rightDistance < leftDistance) {
            return "R";
        }
        
        return "E";
        
    }
}
```
